{"name":"Leaves","tagline":"Simple tool for creating static websites","body":"There are a lot of tools around to create\r\nstatic websites. leaves is meant to be as simple\r\nas possible, and uses only NodeJS tools, with\r\nno other external dependencies. It is built using\r\n[yeoman](http://yeoman.io/) and [Grunt](http://gruntjs.com/).\r\n\r\nCheck out [the Yeoman generator][generator-static-website] documentation\r\nfor more information of what you can do in the created project.\r\n\r\n# Main functionalities\r\n\r\n* HTML templating via [Jade](http://jade-lang.com/) (default) or [EJS](https://github.com/RandomEtc/ejs-locals)\r\n* CSS templating via [Stylus](http://learnboost.github.io/stylus/) (default) or [less](http://lesscss.org/)\r\n* CoffeeScript compilation\r\n* Project watch and livereload\r\n* Scripts and stylesheets globbing with `**/*.js` like syntax\r\n* Compile error displayed in browser\r\n* Single command deploy to GitHub pages\r\n* Misc: lorem-ipsum generator, `leaves` shell completion, project single command upgrade\r\n\r\n# Installation\r\n\r\nYou only need to have NodeJS and `npm` installed.\r\n\r\nTo install leaves, run\r\n\r\n```sh\r\n$ npm install -g leaves\r\n```\r\n\r\nIf `npm install` fails, try to use `sudo`.\r\n\r\n# Commands\r\n\r\n## Setup\r\n\r\nYou can run the initial setup to have shell completion by running:\r\n\r\n```sh\r\n$ leaves setup\r\n```\r\n\r\nOnly zsh is supported for now, but PR are welcome.\r\n\r\n## New project\r\n\r\nTo create a new project, just run:\r\n\r\n```sh\r\n$ leaves new PROJECT_NAME [--html=ejs] [--css=less]\r\n```\r\n\r\nyou can then `cd` in `PROJECT_NAME`.\r\n\r\n### CSS engines\r\n\r\nThe default engine is [Stylus](http://learnboost.github.io/stylus/).\r\nAdd `--css=less` to use [less css](http://lesscss.org/)\r\n\r\n### HTML template engines\r\n\r\nThe default engine is [Jade](http://jade-lang.com/).\r\nAdd `--html=ejs` to use [EJS templates (with layouts)](https://github.com/RandomEtc/ejs-locals)\r\n\r\n## Build\r\n\r\nJust run\r\n\r\n```sh\r\n$ leaves build [--production]\r\n```\r\n\r\nin your project directory. For production build, add the `--production` flag.\r\n\r\n## Watch\r\n\r\nTo build and watch your files, run\r\n\r\n```sh\r\n$ leaves [watch]\r\n```\r\n\r\n(which will run `leaves watch`) in your project directory.\r\n\r\n## Upgrade\r\n\r\nYou can upgrade your leaves installation by running\r\n\r\n```sh\r\n$ leaves upgrade \r\n```\r\n\r\nThis will run `npm update -g leaves` for you and use `sudo` only if needed.\r\n\r\nIn your working project, you can also run\r\n\r\n```sh\r\n$ leaves upgrade -o\r\n```\r\n\r\nto get the latest `Gruntfile.coffee` and update your `package.json`\r\ndependencies. Your `Gruntfile.coffee` will be overwritten so be\r\ncareful when you use it if you have some changes.\r\nThis will also run `npm install` for you to install the latest\r\ndependencies.\r\n\r\n## Publish\r\n\r\nYou can publish your website to [Heroku][heroku] or to [GitHub Pages][github-pages].\r\n\r\nTo publish to Heroku, you only need to have a valid account.\r\nTo publish to Github, you need to have a remote pointing to github.com in your project.\r\n\r\n```sh\r\n$ leaves publish [--skip-build] [--skip-commit] [--skip-install] [-p PROVIDER]\r\n```\r\n\r\n`PROVIDER` parameter can be `github` or `heroku`. The default is `heroku`.\r\nIf you want to use the development build to deploy, pass `--use-dev`.\r\n\r\nYour website will then be accessible at http://APP_NAME.herokuapp.com when publishing with Heroku and http://USERNAME.github.io/REPO_NAME. with GitHub Pages.\r\nFor heroku, `APP_NAME` will default to the appName in `.leavesrc`.\r\n\r\n\r\n## Install\r\n\r\nLeaves can be used as a wrapper around [bower][bower] and [npm][npm].\r\n\r\n```sh\r\n$ leaves install [PACKAGES [-p PROVIDER] [--no-save]]\r\n```\r\n\r\nIf no package is given, leaves will run `npm install` and `bower install`.\r\n\r\nIf packages are given, `PROVIDER` can be either `bower` or `npm`. If provider is not given, it will default to `bower`.\r\n\r\nNew packages are installed using `--save` by default. You can disable this\r\nbehavior by passing `--no-save`.\r\n\r\n## Get\r\n\r\nFetch and prepare project for development.\r\nThis will run `git clone`, `npm install`, `bower install` and `leaves build`\r\nin the project.\r\n\r\n```sh\r\n$ leaves get GIT_REPOSITORY [-p PROTOCOL]\r\n```\r\n\r\n`GIT_REPOSITORY` can be anyting that would work with `git clone`,\r\nor for GitHub repositories, the short syntax `user/repo` can be used.\r\n`PROTOCOL` is only relevant when using the short syntax, and can be\r\n`https` (default) or `ssh`.\r\n\r\n# Other functionalities\r\n\r\n## Easy lorem ipsum generation\r\n\r\nThe function `lorem` is available in all templates.\r\nJust call\r\n\r\n```slim\r\n= lorem(10)\r\n```\r\n\r\nand you will get 10 words of lorem ipsum.\r\nFor other options, see the action [package documentation][node-lorem-ipsum]\r\n\r\n## script and link globbing\r\n\r\nTo avoid having to insert all scripts in your layout,\r\nyou can use glob syntax.\r\n\r\n```jade\r\nhtml\r\n  head\r\n    script(glob=\"js/**/*.js\")\r\n    link(rel=\"stylesheet\" glob=\"css/**/*.css\")\r\n```\r\n\r\nwill become\r\n\r\n```html\r\n<html>\r\n<head>\r\n  <script src=\"js/app.js\">\r\n  <script src=\"js/other.js\">\r\n  <script src=\"css/main.css\">\r\n  <script src=\"css/other.css\">\r\n</head>\r\n<body>\r\n</body>\r\n</html>\r\n```\r\n\r\nfor development build and\r\n\r\n```html\r\n<html>\r\n<head>\r\n  <script src=\"js/application.min.js\">\r\n  <script src=\"css/application.min.css\">\r\n</head>\r\n<body>\r\n</body>\r\n</html>\r\n```\r\n\r\nfor production build, where `js/application.min.js` and\r\n`css/application.min.css` will be concatenated and\r\nminified versions of the globbed files.\r\n\r\nIf alphabetical order does not fit your need, you can\r\nuse\r\n\r\n```jade\r\nhtml\r\n  head\r\n    script(src=\"js/this-one-is-first.js\" group=\"application\")\r\n    script(glob=\"js/**/*.js\")\r\n    link(rel=\"stylesheet\" glob=\"css/**/*.css\")\r\n```\r\n\r\nThe files will always be concatenated in order of appearance.\r\nThe default group is called `application`, but you can use any. All files\r\nin the same group will be concatenated together and ignored from\r\nglobbing if already included.\r\n\r\n[generator-static-website]: https://github.com/claudetech/generator-static-website\r\n[github-pages]: https://pages.github.com/\r\n[heroku]: https://www.heroku.com/\r\n[bower]: http://bower.io/\r\n[npm]: https://www.npmjs.org/\r\n[node-lorem-ipsum]: https://github.com/knicklabs/lorem-ipsum.js","google":"UA-53835415-2","note":"Don't delete this file! It's used internally to help with page regeneration."}